# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define single executor for all jobs.
# See: https://circleci.com/docs/configuration-reference/#executors
executors:
  python:
    docker:
      # Specify the execution environment. You can specify an image from Docker Hub or
      # use one of our convenience images from CircleCI's Developer Hub.
      # See: https://circleci.com/docs/configuration-reference/#executor-job
      - image: cimg/python:3.11.6

  ubuntu:
    machine:
      image: ubuntu-2204:2024.05.1
      docker_layer_caching: true

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  lint:
    executor: python
    steps:
      - checkout
      - run: pip install pre-commit
      - run: |
          cp .pre-commit-config.yaml pre-commit-cache-key.txt
          python --version --version >> pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
      - run: pre-commit run --all-files
      - save_cache:
          key: v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit

  test:
    executor: ubuntu
    steps:
      - checkout
      - run: docker compose -f docker-compose.local.yml build
      - run: >-
          docker compose -f docker-compose.local.yml run --rm django
          coverage run -m pytest && coverage html
      - store_artifacts:
          path: htmlcov

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  dev:
    jobs:
      - lint
      - test
